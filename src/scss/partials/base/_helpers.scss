@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
        -o-transform: $transforms;
        -ms-transform: $transforms;
    -webkit-transform: $transforms;
        transform: $transforms;
}

@mixin delay($rule, $number, $value) {
    @for $i from 1 to ($number + 1) {
        &:nth-child(#{$i}) {
        -webkit-#{$rule}-delay: (#{$i*$value});
        #{$rule}-delay: (#{$i*$value});
        }
    }
}

$mobile-border: 1px solid rgba(255, 255, 255, 0.15);
$section-border: 1px solid rgba(78, 78, 78, 0.2);
$thead-border: 1px solid rgba(255, 255, 255, 0.3);
$promo-border: 2px solid rgba(255, 255, 255, 0.15);

$copy-opacity: 0.8;

*:focus {
    // outline: 3px solid #7AACFE !important; TODO: global focus states
}

.img-fluid {
    width: 100%;
    height: auto;
}

a[disabled="disabled"] {
    pointer-events: none;
    cursor: default;
}

// We should not be doing this -- hiding the input number spinner
input[type='number'] {
    -moz-appearance:textfield;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.app-padding {
    padding-right: rem(5);
    padding-left: rem(5);

}

.app-padding-md {
    padding-right: rem(5);
    padding-left: rem(5);

}

.app-padding-lg {
    padding-right: rem(15);
    padding-left: rem(15);

}

/*
    Improved screen reader only CSS class
    @author Gaël Poupard
        @note Based on Yahoo!'s technique
        @author Thierry Koblentz
        @see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
    * 1.
        @note `clip` is deprecated but works everywhere
        @see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
    * 2.
        @note `clip-path` is the future-proof version, but not very well supported yet
        @see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
        @see http://caniuse.com/#search=clip-path
        @author Yvain Liechti
        @see https://twitter.com/ryuran78/status/778943389819604992
    * 3.
        @note preventing text to be condensed
        author J. Renée Beach
        @see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
        @note Drupal 8 goes with word-wrap: normal instead
        @see https://www.drupal.org/node/2045151
        @see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
    * 4.
        @note !important is important
        @note Obviously you wanna hide something
        @author Harry Roberts
        @see https://csswizardry.com/2016/05/the-importance-of-important/
*/

.text-center {
    text-align: center;
}

.lity {
    &.lite-screen {
        background:rgba(0,0,0,0.6);
    }
}

.sr-only {
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */
    -webkit-clip-path: inset(50%) !important;
        clip-path: inset(50%) !important;  /* 2 */
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
    white-space: nowrap !important;            /* 3 */
}

/*
    Use in conjunction with .sr-only to only display content when it's focused.
    @note Useful for skip links 
    @see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
    @note Based on a HTML5 Boilerplate technique, included in Bootstrap
    @note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver
        @author Sylvain Pigeard
        @see https://github.com/twbs/bootstrap/issues/20732
*/
.sr-only-focusable:focus,
.sr-only-focusable:active {
    clip: auto !important;
    -webkit-clip-path: none !important;
        clip-path: none !important;
    height: auto !important;
    margin: auto !important;
    overflow: visible !important;
    width: auto !important;
    white-space: normal !important;
}

